name: ci-pr
run-name: ${{ github.head_ref || github.ref_name }}-ci-pr

on:
  pull_request:
    paths-ignore:
      - '**.jpg'
      - '**.png'
      - '**.md'
  workflow_dispatch:


concurrency:
  group: ci-pr-${{ github.event.number }}
  cancel-in-progress: true


jobs:

  unit-tests:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      max-parallel: 10
      matrix:
        godot-version: ['4.1', '4.1.1', '4.1.2', '4.1.3', '4.2', '4.2.1']
        godot-status: ['stable']
        godot-net: ['', '.Net']

    steps:
      - name: 'Checkout gdUnit4-action'
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: 'Install test project'
        shell: bash
        run: |
          cp -fR .github/workflows/resources/* .

      - name: 'CI on 🐧 Godot_v${{ matrix.godot-version }}-${{ matrix.godot-status }}'
        if: ${{ matrix.godot-net == '' }}
        timeout-minutes: 5
        uses: ./
        with:
          godot-version: ${{ matrix.godot-version }}
          godot-status: ${{ matrix.godot-status }}
          godot-net: false
          gdunit-version: master
          gdunit-tests: 'res://tests/'
          report-name: test-report_${{ matrix.godot-version }}-${{ matrix.godot-status }}

      - name: 'CI on 🐧 Godot_v${{ matrix.godot-version }}-${{ matrix.godot-status }}-net'
        if: ${{ matrix.godot-net == '.Net' }}
        timeout-minutes: 5
        uses: ./
        with:
          godot-version: ${{ matrix.godot-version }}
          godot-status: ${{ matrix.godot-status }}
          godot-net: true
          gdunit-version: master
          gdunit-tests: 'res://tests/mono'
          report-name: test-report_${{ matrix.godot-version }}-${{ matrix.godot-status }}-net


  finalize:
    if: ${{ !cancelled() }}
    runs-on: ubuntu-latest
    name: 'Final Results'
    needs: [unit-tests]
    steps:
      - run: exit 1
        if: >-
          ${{
               contains(needs.*.result, 'failure')
            || contains(needs.*.result, 'cancelled')
          }}
